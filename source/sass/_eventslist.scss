
				/* =list__toolbar */

.card--events{
	overflow: visible;

	&:hover{
		box-shadow: none;
	}
	
	// .list__toolbar{
	// 	@include transition__3;
	// }

	// &:hover .list__toolbar{
	// 	// box-shadow: 0 8px 17px 0 rgba(0, 0, 0, .2), 0 6px 20px 0 rgba(0, 0, 0, .19);
	// }


	// &:hover .list{
	// 	@extend .hoverable;
	// }

	.card__title{
		box-shadow: none;
	}
}


.list__toolbar{
	@extend .z-depth-1;
	
	// background: rgb(255,255,255);
	background:  $listToolbarBg;

	padding: 1em .1em;

	[class^="wrapper"]{
		margin-bottom: 0;
	}
}


.filter__sort__selects{

	font-family: $primaryFont;

	.caret{
		color: inherit !important;
		z-index:  50 !important;
	}

	.select-dropdown{
		@extend .text__center;
		@extend .capitalize;

		@include z-depth-1;

		
		background: $listToolBg !important;
		border-bottom: none !important;
		border: 1px solid rgb(240,240,240) !important;
		border-radius: $btnSubtleRadius;
		
		margin: 0 !important;
		padding: 0 !important;
		
		// display: block !important;
		min-height: auto !important;
		height: auto !important;
		color: $listToolTextColor;
		font-size: .85rem !important;
		font-family: inherit;
		letter-spacing: .03em;
		line-height: 1.7rem !important;


		&.active{
			background: $listToolActiveBg !important;
		}

		// width: auto !important;
		&:hover{
			// @include cardPopout1;
		}
		li{
			text-shadow: none;
			font-size: .75rem;
			line-height: 1em !important;
			padding: 0;
			min-height: auto !important;
			border-bottom: 1.5px solid rgb(230,230,230);
			span{
				@extend .text__center;
				@extend .capitalize;

				display: block;
				color: initial !important;
				font-size: inherit !important;
				line-height: initial !important;
				padding: .8em .3em !important;

			}
			&:last-child{
				border-bottom: none;
			}
			/* &.disabled{
				border-bottom: 1.5px solid rgb(245,245,245);
				span{
					color: rgb(150,150,150) !important;
					display: none;

				}
			} */
		}

	}

	& + label{
		@include filterLabels;
		color: $listHeaderTextColor;
	}
}

/* 
.container--filter__sort__selects{
	label{
		cursor: pointer;
		pointer-events: auto;

	}
	&.reverse{
		label i.up{
			opacity: .4 !important;
		}
		label i.down{
			opacity: 1 !important;
		}
		
	}
} */


				/* =tool--range */

.container--tool--range {
	.noUi-handle,
	.noUi-tooltip,
	.noUi-connect{
		background: $listInfoBg !important;
		background-color: $listInfoBg !important;
	}

	label{
		@include filterLabels;
		padding: 0 0 .8rem;
		position: relative;

		span{
			@include absolute;

			font-size: .75rem;
			
			&.rankStart{
				left: 0;
				transform: translateX(-50%);
			}
			&.rankEnd{
				left: auto;
				right: 0;
				transform: translateX(50%);
			}
		}
	}
}



.tool--range{

}

				/* =tool--search */

	
.tool--search{
	margin: 0;
	width:100%;
	
	
	@extend .z-depth-1;
	position:relative;
	border-radius: $btnSubtleRadius;

	.input-field{
		margin-bottom:0;
		margin-top:0;
		height: 3rem;
		margin: 0 ;
		width: 100%;
		position:relative;
		font-size: .8rem;
		// height: 1rem;

		input#ceListSearch{
			@extend .capitalize;
			font-family: $primaryFont;
			font-size: .85rem;
			color: $listToolTextColor;
			background: $listToolBg;
			
			height: 100%;
			margin:0;
			padding: 0 .4em;
			box-sizing: border-box;
			line-height: 3rem;
			width: 100%;
			border:none;
			box-shadow:none;

			&:focus{
				background: white;
				border:none;

			}

			&:focus + label,
			&.valid + label{
				color: rgba(0,0,0,0) !important;
				transform: none;
				box-shadow:none;
			}
		}
		
		label{
			@include absolute;
			display: block;
			color: rgb(0,0,0) !important;
			text-shadow: none;
			transition: all .1s;
			// background:red;
			top: auto;
			font-size: .8rem;
			height: 100%;
			bottom: 0;
			left: 0 !important;
			padding: 0 .4em;
			line-height: 3rem;
			transform:none;
			transition: all .3s;
		}
	}


	.container--search__btn{
		@include absolute;
		bottom:0;
		left: auto;
		right: 0;
		// background:red;

		i#ceListSearchBtn{	
			cursor: pointer;
			padding: 0 .3em;
			display: inline-block;
			line-height: 3rem;
			vertical-align: middle;
			height: 100%;
			width: 100%;
		}

	}
}



				/* =list */

.list{
	@extend .hoverable;
	@extend .z-depth-1;

	background: $listBg;

	border-radius: $cardRadius;
	display:block !important;
	// box-shadow: 0 -2px 5px rgba(0,0,0,/.15);
	margin: 5rem auto 0;
	width: 100%;
	// padding: 0 1rem;
	position: relative;
	

	.row{
		margin-bottom: 0 !important;
		$columnPadding: 0 !important;
		.col{
			padding-left: $columnPadding;
			padding-right: $columnPadding;
		}
	}
	
	tr,
	td,
	thead,
	tbody,
	caption{
		display: block !important;
		border:none;
	}

	.list__rows{
		padding: 0 1rem;
	}
	.list__row{
		border-bottom: $tableSlimBorder;

		&:nth-child(2n){
			background:rgba(0,0,0,.008);
		}
		
	}

	.caption{
		@include absolute;

		@extend .text__left;
		@extend .z-depth-2;
		
		z-index: 2;
		border-radius: $btnSubtleRadius;
		bottom: calc(100% + 1.5rem);
		top:auto;
		height: 2.2rem;
		line-height: 2.2rem;
		font-size: 1rem;
		text-transform: capitalize;
		// background: hsl(243,90%,37%);
		background: $listInfoBg;
		color: $listInfoTextColor;
		padding: 0 1rem;
		cursor: pointer;

	}
	.list__headers{
		// background: rgb(52,71,253);
		height: $listHeaderHeight;
		padding: 0 1rem;
		color: $listHeaderTextColor;
		background: $listHeaderBg;
		border-radius: $cardRadius $cardRadius 0 0;

		// border-bottom: $tableThickBorder;
	}
}

.container--list__header{
	height:100%;
	border-bottom:$tableThickBorder;

	.list__header{
		@extend .uppercase;
		
		text-shadow: none;

		text-align:center;
		margin: 0;
		font-size: .7rem;
		line-height: $listHeaderHeight;
		letter-spacing: .08em;
		font-weight: 600;
		
		// border-right: $tableThickBorder;


		span{
			display: inline-block;
			vertical-align: middle;
			position: relative;
			cursor: pointer;
		}

		i{
			@include absolute;
			display: inline-block;
			font-size: 1.35rem;
			left: 100%;
			height: 100%;
			top:50%;
			&.up{
				transform: translateY(-40%);
				opacity: .4;
			}
			&.down{
				transform: translateY(-20%);
				opacity: .4;
			}
		}
		&.active {
			i{
				&.reverse{
					&.up{
						opacity: .4;
					}
					&.down{
						opacity: 1;
						color: $listSortIconColor;
					}
				}

				&.down{
					opacity: .4;
				}
				&.up{
					opacity: 1;
					color: $listSortIconColor;
				}

			}
		}
	}
	&:first-child .list__header{
		// border-right: $tableThickBorder;
		position: relative;

		&:after{
			@include pseudo;
			top:auto;
			left: auto;
			right: 0;
			bottom: 0;
			
			width: 2px;
			height: (3rem + 1.5rem);
			background: rgb(230,230,230);

		}
	}
	&:last-child .list__header{
		border-right:none !important;
	}
}

.list__rows{
	.list__row{
		overflow:hidden;
		height: calc(#{$heightOfListOfEvents} + 2rem) ;
	}
}

.date__for__events{
	@extend .text__center;
	@extend .uppercase;
	@extend .text__shadow--very__subtle;

	// text-shadow: -2px 2px 4px hsl(243,90%,75%);	
	overflow:hidden;
	height: 63rem; // 1000px
	padding: 2em 0 !important;
	border-right: $tableThickBorder;
	font-family: $newsBoxFont;

	.dateBadge{
		@extend .inline__block;
		@extend .z-depth-1;

		position: relative;
		left: -.5rem;

		background: $listInfoBg;
		// background: $color6DarkS;
		padding: .25rem .4rem;
		border-radius: $btnSubtleRadius;
		color: $listInfoTextColor;
		font-size: .8rem;
		font-weight: 400;
		overflow: visible;

		.month{
			background:none;
			letter-spacing: $letterSpacingExtra;
			font-family: $primaryFont;

		}

		&:before,
		&:after{
			@include pseudo;
			z-index: 20;

		}

		&:before{
			height: 2px;
			top: 50%;
			left: 100%;
			width: 100%;
			background: rgb(210,210,210);
		}

		&:after{
			height: 10px;
			width: 10px;
			border-radius: 100%;
			top: 50%;
			transform: translateY(-40%);
			left: calc(100% + 5px);
			background: rgb(210,210,210);
		}
	}

}
.events__for__date{
	padding:0 !important;
	position: relative;
	height:100%;
	
	
	
	.list__of__events{
		margin: 0;
		max-height: $heightOfListOfEvents;
		overflow: hidden;
		border-bottom:$tableSlimBorder;

		.event{
			height: calc(#{$heightOfListOfEvents} / 3);

			.wrapper--event{
				height: 100%;
			}
		}
		.event__detail{
			@extend .capitalize;
			@extend .text__shadow--very__subtle;
			
			letter-spacing: $letterSpacingMed;
			color: rgb(51, 51, 51);
			font-size: .85rem;
			text-shadow: none;
			text-align: center;
			padding: 0 1em;
			line-height: calc(#{$heightOfListOfEvents} / 3);
			height: 100%;
			border-right: $tableSlimBorder;
			&.event__stock{
				@extend .uppercase;
				font-size: .8rem;
				letter-spacing: $letterSpacingExtra;
			}
			&:last-child{
				border-right:none !important;
			}
		}
	}

	.pagination{
		@include absolute;
		left: 50%;
		top: auto;
		bottom: -.1rem;
		transform: translateX(-50%);
		font-family: $newsBoxFont;

		height: 2rem;
		// background:red;
		text-align: center;
		margin: 0;
		// background: transparent;

		.button{
			display: inline-block;
			vertical-align: middle;
			height: auto;
			margin: .2em;

			border-radius:4px;
			font-size: .8rem;
			line-height: 1.2rem;
			// padding-top: 0.1rem;
			padding-bottom: 0.1rem;

			i{
				font-size: 1.5rem;
				line-height: 1em;
			}

			&:not(.active){
				text-shadow: none;
				font-size: .9em;
			}
			&.disabled{
				opacity: .5;
				pointer-events:none;
			}
			&.active{
				font-size: .9rem;
				color: $listInfoTextColor;
				background:  linear-gradient(-45deg,
			          hsl(243,90%,57%),
			          hsl(236,100%,69%)
			        );
				background: $listInfoBg;
			}

			
		}
		

	}
}


.list__footer{
	@extend .text__center;
	@extend .uppercase;

	text-shadow:none;
	border:none;
	font-size:.85rem;
	font-weight:600;
	color: rgb(190,190,190);
	margin: 0;
	padding: 1rem 0 ;


}




	/* generating 10 column grid for columns inside .list__of__events */
.list__of__events .col{
    float: left;
    box-sizing: border-box;
    padding: 0;
    min-height: 1px;

    $j: 1;
    $num__cols: 10;
    @while $j <= $num__cols {
      $perc: unquote((100 / ($num__cols / $j)) + "%");
      &.s#{$j} {
        width: $perc;
        @include reset-offset;
      }
      $j: $j + 1;
    }

    $j: 1;
    @while $j <= $num__cols {
      $perc: unquote((100 / ($num__cols / $j)) + "%");
      @include grid-classes("s", $j, $perc);
      $j: $j + 1;
    }

}
